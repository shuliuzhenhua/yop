<?php
/**
 * Created by PhpStorm.
 * User: shuliuzhenhua
 * Date: 2019/1/5
 * Time: 4:16 PM
 */

namespace Shuliuzhenhua\Yop;

use Shuliuzhenhua\Yop\core\YopClient as Client;

/**
 * 客户端类
 * Class YopClient
 * @package Shuliuzhenhua\Yop
 */
class YopClient extends Client
{
    /**
     * 结果
     * @var
     */
    private static $response;

    /**
     * get 请求
     * @param $methodOrUri
     * @param $YopRequest
     * @return core\YopResponse
     * @throws \Exception
     */
    public static function get($methodOrUri, $YopRequest)
    {
        self::$response = parent::get($methodOrUri, $YopRequest); // TODO: Change the autogenerated stub
        return self::checkYopResponse(self::$response);
    }

    /**
     * post 请求
     * @param $methodOrUri
     * @param $YopRequest
     * @return core\YopResponse
     * @throws \Exception
     */
    public static function post($methodOrUri, $YopRequest)
    {
        self::$response = parent::post($methodOrUri, $YopRequest); // TODO: Change the autogenerated stub
        return self::checkYopResponse(self::$response);
    }

    /**
     * 检查返回结果
     * @param $response
     * @return mixed
     * @throws \Exception
     */
    private static function checkYopResponse($response)
    {
        $state = $response->state;
        $code = $response->result['code'];

        if ($state === 'SUCCESS' && ( $code === '1' || $code === 'SUCCESS')) {
            return $response->result;
        }

        if (empty($response->result)) {
            throw new \Exception($response->error);
        }

        $error = json_encode($response->result, JSON_UNESCAPED_UNICODE);
        throw new \Exception($error);
    }
}